<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="sellerMapper">
	
	<resultMap id="sellerResultSet" type="seller">
		<result column="SELLER_NO" property="sellerNo"/>
		<result column="COMPANY_NAME" property="companyName" />
		<result column="SELLER_ID" property="sellerId"/>
		<result column="SELLER_PWD" property="sellerPwd"/>
		<result column="SELLER_NAME" property="sellerName"/>
		<result column="COMPANY_NO" property="companyNo"/>
		<result column="BUSINESS_NO" property="businessNo" />
		<result column="ADDRESS" property="address"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="ACCOUNT_NO" property="accountNo"/>
		<result column="DELETE_DATE" property="deleteDate"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="ACCEPT_DATE" property="acceptDate"/>
		<result column="REFUSE_REASON" property="refuseReason"/>
	</resultMap>
	
	<resultMap id="sellerFileResultSet" type="sellerFile">
		<result column="FILE_NO" property="fileNo"/>
		<result column="SELLER_NO" property="sellerNo" />
		<result column="ORIGINAL_NAME" property="originalName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="CREATE_DATE" property="createDate" />
		<result column="DELETE_DATE" property="deleteDate"/>
	</resultMap>
	
	<!-- 판매자 마켓 리스트 조회 -->
	<!-- 나중에 조건절에 승인일 추가하기 -->
	<select id="ajaxSelectSellerList" resultMap="sellerResultSet">	
		SELECT * 
		  FROM SELLER
		 WHERE DELETE_DATE IS NULL
		 ORDER BY SELLER_NO DESC		 			
	</select>
	
	<!-- 판매자 마켓 파일 조회 -->
	<select id="ajaxSelectSellerFileList" resultMap="sellerFileResultSet" parameterType="_int">
		SELECT *
		  FROM SELLER_FILE
		 WHERE SELLER_NO = #{sellerNo}
		   AND DELETE_DATE IS NULL
	</select>
	
	<select id="ajaxSelectStarRating" resultType="_double" parameterType="_int">
		SELECT NVL(TRUNC(AVG(STAR_RATING), 2), 0.0)
		  FROM REVIEW R
		  JOIN GOODS G ON (R.GOOD_NO = G.GOOD_NO)
		  JOIN MEMBER M ON (R.MEMBER_NO = M.MEMBER_NO)
		 WHERE G.SELLER_NO = #{sellerNo}
		   AND G.DELETE_DATE IS NULL
		   AND R.DELETE_DATE IS NULL
		   AND M.STATUS IS NULL	
	</select>
	
	<select id="ajaxSelectReviews" resultType="_int" parameterType="_int">
		SELECT NVL(COUNT(R.REV_NO), 0)
		  FROM REVIEW R
		  JOIN GOODS G ON (R.GOOD_NO = G.GOOD_NO)
		  JOIN MEMBER M ON (R.MEMBER_NO = M.MEMBER_NO)
		 WHERE G.SELLER_NO = #{sellerNo}
		   AND G.DELETE_DATE IS NULL
		   AND R.DELETE_DATE IS NULL
		   AND M.STATUS IS NULL
	</select>
	
	<select id="ajaxSelectSubscribeCount" resultType="_int" parameterType="_int">
		SELECT NVL(COUNT(S.MEMBER_NO), 0) 
		  FROM SUBSCRIBE S
		  JOIN MEMBER M ON (S.MEMBER_NO = M.MEMBER_NO)
		 WHERE M.STATUS IS NULL
		   AND S.SELLER_NO = #{sellerNo}
	</select>
	
	<select id="ajaxSelectSellerMarketList" resultMap="sellerResultSet" parameterType="_int">
		SELECT * 
		  FROM SELLER
		 WHERE DELETE_DATE IS NULL
		   AND SELLER_NO = #{sellerNo}
	</select>
	
	<!-- 로그인용 쿼리문 -->
	<select id="loginSeller" parameterType="seller" resultMap="sellerResultSet">
	 SELECT *
	   FROM SELLER S
	   LEFT JOIN SELLER_FILE F USING (SELLER_NO)
	  WHERE SELLER_ID = #{sellerId}
	    AND S.DELETE_DATE IS NULL
	    AND F.DELETE_DATE IS NULL
	</select>
	
	<!-- 회원가입용 쿼리문 -->
	<insert id="insertSeller"
			parameterType="seller">
		INSERT INTO SELLER(SELLER_NO,
						   COMPANY_NAME,
						   SELLER_ID,
						   SELLER_PWD,
						   SELLER_NAME,
						   COMPANY_NO,
						   BUSINESS_NO,
						   ADDRESS,
						   EMAIL,
						   PHONE,
						   ACCOUNT_NO						  
						   )
					VALUES(SEQ_SNO.NEXTVAL
						 , #{companyName}
						 , #{sellerId}
						 , #{sellerPwd}
						 , #{sellerName}
						 , #{companyNo}
						 , #{businessNo}
						 , #{address}
						 , #{email}
						 , #{phone}
						 , #{accountNo}
						 )
	</insert>

	<!-- 회원정보수정용 쿼리문 -->
	
	<update id="updateSeller"
		 	parameterType="seller">
		UPDATE SELLER
		   SET SELLER_NAME = #{sellerName}
		   	 , COMPANY_NAME = #{companyName}
		   	 , COMPANY_NO = #{companyNo}
		   	 , EMAIL = #{email}
		   	 , PHONE = #{phone}
		   	 , BUSINESS_NO = #{businessNo}
		   	 , ADDRESS = #{address}
		   	 , ACCOUNT_NO = #{accountNo}
		WHERE SELLER_ID = #{sellerId}
		  AND DELETE_DATE IS NULL
	</update>

	<!-- 회원탈퇴용 쿼리문 -->
	<update id="deleteSeller"
			parameterType="string">
		UPDATE SELLER
		   SET DELETE_DATE = SYSDATE
		 WHERE SELLER_ID = #{sellerId}
	</update>

	<!-- ID찾기(이메일기반) -->
	<select id="findId" 
			parameterType="string" 
			resultType="string">
			SELECT SELLER_ID 
			FROM SELLER 
			WHERE EMAIL=#{email} AND DELETE_DATE IS NULL
	</select>

	<!-- 비밀번호 변경 -->
	<update id="updateSellerPwd"
			parameterType="seller">
		UPDATE SELLER SET
		SELLER_PWD = #{sellerPwd}
		WHERE SELLER_NO = #{sellerNo}
	</update>
	
	<select id="selectSellerList" resultMap="sellerResultSet">
		SELECT SELLER_NO, SELLER_ID, SELLER_NAME, COMPANY_NAME, EMAIL, ADDRESS, DELETE_DATE
		  FROM SELLER
		 ORDER BY SELLER_NO DESC
	</select>
	
	<select id="selectSeller" parameterType="_int" resultMap="sellerResultSet">
		SELECT SELLER_NO, SELLER_ID, SELLER_NAME, COMPANY_NAME ,COMPANY_NO, BUSINESS_NO, EMAIL, ADDRESS, ACCOUNT_NO, PHONE, DELETE_DATE, ENROLL_DATE, REFUSE_REASON
		  FROM SELLER
		 WHERE SELLER_NO = #{sellerNo}
	</select>
	
	<!-- 판매자 정지 -->
	<update id="inactiveSeller" parameterType="seller">
		UPDATE SELLER 
		   SET REFUSE_REASON = #{refuseReason}
		     , DELETE_DATE = SYSDATE
		 WHERE SELLER_NO = #{sellerNo}
	</update>
	
	<!-- 판매자 활성화 -->
	<update id="activeSeller" parameterType="_int">
		UPDATE SELLER 
		   SET REFUSE_REASON = NULL
		     , DELETE_DATE = NULL
		 WHERE SELLER_NO = #{sellerNo}
	</update>
	
	<!-- 판매자 회원수정 파일 업로드 -->
	<insert id="sellerFile" parameterType="sellerFile">
		INSERT INTO SELLER_FILE(FILE_NO, SELLER_NO, ORIGINAL_NAME, CHANGE_NAME, CREATE_DATE) 
			VALUES(SEQ_SFNO.NEXTVAL, #{sellerNo}, #{originalName}, #{changeName}, SYSDATE)
	</insert>

	<!-- 판매자 마이페이지 프로필 사진 로드 -->
	<select id="getSellerFile" parameterType="_int" resultMap="sellerFileResultSet">
		SELECT * FROM SELLER_FILE
			WHERE SELLER_NO=#{sellerNo} AND DELETE_DATE IS NULL
	</select>
	
	<update id="deleteSellerFile" parameterType="_int">
		UPDATE SELLER_FILE SET DELETE_DATE=SYSDATE 
			WHERE SELLER_NO=#{sellerNo} AND DELETE_DATE IS NULL
	</update>
	
	<select id="memberSubscribeList" parameterType="_int" resultMap="sellerResultSet">
		SELECT SC.SELLER_NO, S.SELLER_NAME, S.COMPANY_NAME, S.EMAIL, S.PHONE, SF.CHANGE_NAME
		  FROM SUBSCRIBE SC
		  JOIN SELLER S ON(SC.SELLER_NO = S.SELLER_NO)
		  LEFT JOIN SELLER_FILE SF ON(S.SELLER_NO = SF.SELLER_NO AND SF.DELETE_DATE IS NULL)
		 WHERE MEMBER_NO = #{memberNo}
		   AND S.DELETE_DATE IS NULL
	</select>
</mapper>