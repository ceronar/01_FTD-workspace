<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="member">
		<result column="MEMBER_NO" property="memberNo" />
		<result column="MEMBER_ID" property="memberId" />
		<result column="MEMBER_PWD" property="memberPwd" />
		<result column="MEMBER_NAME" property="memberName" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="ADDRESS" property="address" />
		<result column="GENDER" property="gender" />
		<result column="STATUS" property="status" />
		<result column="ZIP_CODE" property="zipCode" />
		<result column="DETAIL_ADDRESS" property="detailAddress" />
	</resultMap>
	
	<resultMap id="subscribeResultSet" type="subscribe">
		<result column="MEMBER_NO" property="memberNo" />
		<result column="SELLER_NO" property="sellerNo" />
	</resultMap>
	
	
	<!-- 로그인용 쿼리문 -->
	<select id="loginMember" 
			parameterType="member" 
			resultMap="memberResultSet">
		
		<!-- 나중에 암호화 문으로 바꿔주세요. -->
		
		<!--
		SELECT *
		  FROM MEMBER
		 WHERE MEMBER_ID = #{memberId}
		   AND MEMBER_PWD = #{memberPwd}
		   AND STATUS IS NULL
		   
		</select>
	 	-->
	 	
	 	<!-- 암호화 작업 후 : 오로지 아이디(PK) 만으로 회원을 조회 -->
		 SELECT *
		   FROM MEMBER
		  WHERE MEMBER_ID = #{memberId}
		    AND STATUS IS NULL 
		</select>
	 	
	 
	<!-- 회원가입용 쿼리문 -->
	<insert id="insertMember"
			parameterType="member">
		INSERT INTO MEMBER(MEMBER_NO
						 , MEMBER_ID
						 , MEMBER_PWD
						 , MEMBER_NAME
						 , EMAIL
						 , PHONE
						 , ADDRESS
						 , GENDER
						 , ZIP_CODE
						 , DETAIL_ADDRESS
						 )
				    VALUES(SEQ_MNO.NEXTVAL
				    	, #{memberId}
				    	, #{memberPwd}
				    	, #{memberName}
				    	, #{email}
				    	, #{phone}
				    	, #{address}
				    	, #{gender}
				    	, #{zipCode}
				    	, #{detailAddress})
				    	
	</insert>
	
	<!-- 아이디 중복체크용 쿼리문 -->
	<select id="idCheck" 
			parameterType="string" 
			resultType="_int">
		
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE MEMBER_ID = #{checkId}
		 
	</select>
	
	<!-- 회원정보수정용 쿼리문 -->
	<update id="updateMember"
			parameterType="member">
		UPDATE MEMBER
		   SET MEMBER_NAME = #{memberName}
		   	 , EMAIL = #{email}
		   	 , GENDER = #{gender}
		   	 , PHONE = #{phone}
		   	 , ADDRESS = #{address}
		   	 , ZIP_CODE = #{zipCode}
		   	 , DETAIL_ADDRESS = #{detailAddress}
		WHERE MEMBER_ID = #{memberId}
		  AND STATUS IS NULL
	
	</update>
	
	<!-- 회원탈퇴용 쿼리문 -->
	<update id="deleteMember"
			parameterType="string">
		UPDATE MEMBER
		   SET STATUS = SYSDATE
		 WHERE MEMBER_ID = #{memberId}
		     
		
		
	</update>
	
	<!-- ID찾기(이메일기반) -->
	<select id="findId" 
			parameterType="string" 
			resultType="string">
			SELECT MEMBER_ID 
			FROM MEMBER 
			WHERE EMAIL=#{email} AND STATUS IS NULL
	</select>
	
	<!-- 마켓 찜 조회 쿼리문 -->
	<select id="ajaxSelectSubscribe" parameterType="subscribe" resultMap="subscribeResultSet">
		SELECT * 
		  FROM SUBSCRIBE
		 WHERE MEMBER_NO = #{memberNo}
		   AND SELLER_NO = #{sellerNo}
			
	</select>
	
	<!-- 마켓 찜 삭제 쿼리문 -->
	<delete id="ajaxDeleteSubscribe" parameterType="subscribe">
		DELETE
		  FROM SUBSCRIBE
		 WHERE MEMBER_NO = #{memberNo}
		   AND SELLER_NO = #{sellerNo}
	</delete>
	
	<!-- 마켓 찜 추가 쿼리문 -->
	<insert id="ajaxInsertSubscribe" parameterType="subscribe">
		INSERT INTO SUBSCRIBE (MEMBER_NO
	                        ,  SELLER_NO)                                      
	                    VALUES(#{memberNo}
	                         , #{sellerNo})	
	</insert>

	<!-- 비밀번호 변경 -->
	<update id="updatePwd"
			parameterType="member">
		UPDATE MEMBER SET
		MEMBER_PWD = #{memberPwd}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
		
	<select id="selectMemberList" resultMap="memberResultSet">
		SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, EMAIL, PHONE, ADDRESS, STATUS
		  FROM MEMBER
		 ORDER BY MEMBER_NO DESC
	</select>
	
	<select id="selectMember" parameterType="_int" resultMap="memberResultSet">
		SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, EMAIL, PHONE, ADDRESS, GENDER, STATUS, ZIP_CODE, DETAIL_ADDRESS
		  FROM MEMBER
		 WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<update id="memberStatusChange" parameterType="member">
		UPDATE MEMBER 
		<choose>
			<when test='status eq "active"'>
			   SET STATUS = SYSDATE
			</when>
			<otherwise>
			   SET STATUS = NULL
			</otherwise>
		</choose>
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
</mapper>
